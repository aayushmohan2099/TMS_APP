# Generated by Django 5.2.6 on 2025-09-12 07:15

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bmmu', '0016_alter_trainingplan_type_of_training'),
    ]

    operations = [
        migrations.RemoveField(
            model_name='beneficiary',
            name='ekyc_registered_on',
        ),
        migrations.RemoveField(
            model_name='beneficiary',
            name='registered_on_start',
        ),
        migrations.RemoveField(
            model_name='trainingpartner',
            name='drp_payments',
        ),
        migrations.RemoveField(
            model_name='trainingpartner',
            name='profile_picture',
        ),
        migrations.RemoveField(
            model_name='trainingplan',
            name='batch_creation_ekyc',
        ),
        migrations.RemoveField(
            model_name='trainingplan',
            name='theme_expert_contact',
        ),
        migrations.AlterField(
            model_name='trainingpartner',
            name='signed_report_file',
            field=models.FileField(blank=True, null=True, upload_to='partner_signed_reports/', verbose_name='Signed Report (PDF/JPG)'),
        ),
        migrations.AlterField(
            model_name='trainingpartner',
            name='signed_report_upload_status',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Signed Report Upload (status/notes)'),
        ),
        migrations.AlterField(
            model_name='trainingpartner',
            name='signed_report_uploaded_by',
            field=models.CharField(blank=True, max_length=255, null=True, verbose_name='Signed Report Uploaded By'),
        ),
        migrations.AlterField(
            model_name='trainingpartnertargets',
            name='allocated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_targets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='trainingpartnertargets',
            name='evidence_file',
            field=models.FileField(blank=True, null=True, upload_to='target_evidence/', verbose_name='Evidence (PDF/JPG)'),
        ),
        migrations.AlterField(
            model_name='trainingpartnertargets',
            name='target_key',
            field=models.CharField(max_length=255, verbose_name='Target key (District/Module/Theme)'),
        ),
        migrations.AlterField(
            model_name='trainingplan',
            name='approval_status',
            field=models.CharField(blank=True, choices=[('SANCTIONED', 'Sanctioned'), ('PENDING', 'Pending'), ('DENIED', 'Denied')], max_length=20, null=True, verbose_name='Approval of Training Plan'),
        ),
        migrations.AlterField(
            model_name='trainingplan',
            name='theme_expert',
            field=models.ForeignKey(blank=True, help_text='(Optional legacy FK) SMMU user who is theme expert (nullable). Prefer ThemeExpertAssignment.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='theme_expert_for', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='trainingplan',
            name='training_partner',
            field=models.ForeignKey(blank=True, help_text='(Optional legacy FK) Preferred / assigned training partner (nullable). Prefer TrainingPlanPartner.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_plans', to='bmmu.trainingpartner'),
        ),
        migrations.CreateModel(
            name='BeneficiaryBatchRegistration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('registered_on_start', models.BooleanField(default=False, verbose_name='Registered on start (eKYC)')),
                ('ekyc_registered_on', models.DateTimeField(blank=True, null=True, verbose_name='eKYC registered on')),
                ('certificate_issued', models.BooleanField(default=False, verbose_name='Certificate issued')),
                ('attendance', models.PositiveIntegerField(blank=True, null=True, verbose_name='Attendance (days)')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiarybatchregistrations', to='bmmu.batch')),
                ('beneficiary', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='beneficiarybatchregistrations', to='bmmu.beneficiary')),
            ],
            options={
                'verbose_name': 'Beneficiary Batch Registration',
                'verbose_name_plural': 'Beneficiary Batch Registrations',
                'unique_together': {('beneficiary', 'batch')},
            },
        ),
        migrations.AlterField(
            model_name='batch',
            name='beneficiaries',
            field=models.ManyToManyField(blank=True, related_name='batches', through='bmmu.BeneficiaryBatchRegistration', to='bmmu.beneficiary'),
        ),
        migrations.CreateModel(
            name='TrainerBatchParticipation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('participated', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainerparticipations', to='bmmu.batch')),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainerparticipations', to='bmmu.mastertrainer')),
            ],
            options={
                'verbose_name': 'Trainer Batch Participation',
                'verbose_name_plural': 'Trainer Batch Participations',
                'unique_together': {('trainer', 'batch')},
            },
        ),
        migrations.AlterField(
            model_name='batch',
            name='trainers',
            field=models.ManyToManyField(blank=True, related_name='batches', through='bmmu.TrainerBatchParticipation', to='bmmu.mastertrainer'),
        ),
        migrations.CreateModel(
            name='EkycVerification',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('verified_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('details', models.TextField(blank=True, null=True)),
                ('ekyc_file', models.FileField(blank=True, null=True, upload_to='ekyc_verifications/')),
                ('notes', models.TextField(blank=True, null=True)),
                ('batch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ekyc_verifications', to='bmmu.batch')),
                ('beneficiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ekyc_verifications', to='bmmu.beneficiary')),
                ('master_trainer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ekyc_verifications', to='bmmu.mastertrainer')),
                ('verified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'eKYC Verification',
                'verbose_name_plural': 'eKYC Verifications',
                'indexes': [models.Index(fields=['beneficiary', 'master_trainer', 'batch'], name='bmmu_ekycve_benefic_8d6af2_idx')],
            },
        ),
        migrations.CreateModel(
            name='MasterTrainerAssignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('assigned_on', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('trainer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='bmmu.mastertrainer')),
                ('training_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_assignments', to='bmmu.trainingplan')),
            ],
            options={
                'verbose_name': 'Master Trainer Assignment',
                'verbose_name_plural': 'Master Trainer Assignments',
                'unique_together': {('trainer', 'training_plan')},
            },
        ),
        migrations.CreateModel(
            name='ThemeExpertAssignment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('theme_name', models.CharField(db_index=True, max_length=255, verbose_name='Theme name')),
                ('expert_contact', models.CharField(blank=True, max_length=50, null=True, verbose_name='Expert contact')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='theme_assignments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Theme Expert Assignment',
                'verbose_name_plural': 'Theme Expert Assignments',
                'unique_together': {('theme_name', 'expert')},
            },
        ),
        migrations.CreateModel(
            name='TrainingPartnerBatch',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('drp_payment_actual', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed'), ('CANCELLED', 'Cancelled')], default='DRAFT', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('assigned_on', models.DateTimeField(auto_now_add=True)),
                ('batch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerbatch', to='bmmu.batch')),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='partnerbatch', to='bmmu.trainingpartner')),
            ],
            options={
                'verbose_name': 'Training Partner Batch',
                'verbose_name_plural': 'Training Partner Batches',
                'unique_together': {('partner', 'batch')},
            },
        ),
        migrations.CreateModel(
            name='TrainingPlanPartner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('drp_payments', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, verbose_name='DRP Payments / Estimated Cost')),
                ('assigned_on', models.DateTimeField(auto_now_add=True)),
                ('assigned_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('partner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_partners', to='bmmu.trainingpartner')),
                ('training_plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plan_partners', to='bmmu.trainingplan')),
            ],
            options={
                'verbose_name': 'Training Plan Partner',
                'verbose_name_plural': 'Training Plan Partners',
                'unique_together': {('training_plan', 'partner')},
            },
        ),
    ]
