# Generated by Django 5.2.6 on 2025-09-06 06:36

import django.contrib.auth.models
import django.contrib.auth.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Beneficiary',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('district', models.CharField(blank=True, db_index=True, max_length=150, null=True)),
                ('block', models.CharField(blank=True, max_length=150, null=True)),
                ('gram_panchayat', models.CharField(blank=True, max_length=150, null=True)),
                ('village', models.CharField(blank=True, max_length=150, null=True)),
                ('shg_lokos_code', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='SHG Lokos Code')),
                ('shg_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='SHG Name')),
                ('member_lokos_code', models.CharField(blank=True, max_length=100, null=True, unique=True, verbose_name='Member Lokos Code')),
                ('member_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Member Name')),
                ('designation_in_shg_vo_clf', models.CharField(blank=True, max_length=200, null=True, verbose_name='Designation in SHG/VO/CLF')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('social_category', models.CharField(blank=True, max_length=50, null=True, verbose_name='Social Category')),
                ('gender', models.CharField(blank=True, max_length=20, null=True)),
                ('education', models.CharField(blank=True, max_length=200, null=True)),
                ('marital_status', models.CharField(blank=True, max_length=50, null=True)),
                ('parent_or_spouse_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Father/Mother/Spouse Name')),
                ('account_number', models.CharField(blank=True, max_length=50, null=True, verbose_name='Account Number (Default)')),
                ('ifsc', models.CharField(blank=True, max_length=20, null=True, verbose_name='IFSC')),
                ('branch_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Branch Name')),
                ('bank_name', models.CharField(blank=True, max_length=200, null=True, verbose_name='Bank Name')),
                ('bank_loan_status', models.BooleanField(default=False, verbose_name='Bank Loan Status (If yes)')),
                ('mobile_no', models.CharField(blank=True, db_index=True, max_length=20, null=True, verbose_name='Mobile No.')),
                ('aadhaar_no', models.CharField(blank=True, max_length=20, null=True, unique=True, verbose_name='Aadhaar No')),
                ('cadres_role', models.CharField(blank=True, max_length=200, null=True, verbose_name='Cadres Role')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Beneficiary',
                'verbose_name_plural': 'Beneficiaries',
                'ordering': ['id'],
            },
        ),
        migrations.CreateModel(
            name='MasterTrainer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(max_length=200)),
                ('certificate_number', models.CharField(blank=True, max_length=200, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Master Trainer',
                'verbose_name_plural': 'Master Trainers',
            },
        ),
        migrations.CreateModel(
            name='TrainingPlan',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('training_name', models.CharField(max_length=255, verbose_name='Training name')),
                ('theme', models.CharField(blank=True, max_length=200, null=True, verbose_name='THEME')),
                ('type_of_training', models.CharField(choices=[('RES', 'Residential'), ('NON_RES', 'Non-residential'), ('OTHER', 'Other')], default='OTHER', max_length=20, verbose_name='Type of Training')),
                ('level_of_training', models.CharField(blank=True, choices=[('VILLAGE', 'Village'), ('CLF', 'CLF'), ('BLOCK', 'Block'), ('DISTRICT', 'District'), ('STATE', 'State')], max_length=20, null=True, verbose_name='Level of training')),
                ('no_of_days', models.PositiveIntegerField(blank=True, null=True, verbose_name='No of Days')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Training Plan',
                'verbose_name_plural': 'Training Plans',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('bmmu', 'BMMU'), ('dmmu', 'DMMU'), ('smmu', 'SMMU'), ('admin', 'Admin')], default='bmmu', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
