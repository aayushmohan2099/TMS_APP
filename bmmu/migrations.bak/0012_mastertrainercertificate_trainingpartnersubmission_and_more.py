# Generated by Django 5.2.6 on 2025-09-11 10:12

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bmmu', '0011_mastertrainer_aadhaar_no_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='MasterTrainerCertificate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('certificate_number', models.CharField(blank=True, max_length=255, null=True, verbose_name='Certificate Number')),
                ('certificate_file', models.FileField(blank=True, help_text='Upload certificate image/PDF (jpeg, png, pdf).', null=True, upload_to='trainer_certificates/')),
                ('issued_on', models.DateField(blank=True, null=True, verbose_name='Issued on')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Master Trainer Certificate',
                'verbose_name_plural': 'Master Trainer Certificates',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='TrainingPartnerSubmission',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('category', models.CharField(choices=[('FOODING', 'Fooding'), ('TOILET', 'Toilet'), ('CENTRE_FRONT', 'Centre (front)'), ('HOSTEL', 'Hostel'), ('ACTIVITY_HALL', 'Activity Hall'), ('OTHER', 'Other')], default='OTHER', max_length=32)),
                ('file', models.FileField(blank=True, help_text='Upload image (jpeg/png) or a PDF containing required photos.', null=True, upload_to='partner_photos_or_pdfs/')),
                ('uploaded_on', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Training Partner Submission',
                'verbose_name_plural': 'Training Partner Submissions',
            },
        ),
        migrations.CreateModel(
            name='TrainingPartnerTargets',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('target_type', models.CharField(choices=[('DISTRICT', 'District'), ('MODULE', 'Module'), ('THEME', 'Theme')], max_length=20)),
                ('target_key', models.CharField(help_text='Name of district/module/theme for which this target applies.', max_length=255, verbose_name='Target key (District/Module/Theme)')),
                ('target_count', models.PositiveIntegerField(blank=True, null=True, verbose_name='Target count')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes / rationale')),
                ('evidence_file', models.FileField(blank=True, help_text='Optional supporting file for the target allocation.', null=True, upload_to='target_evidence/', verbose_name='Evidence (PDF/JPG)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Training Partner Target',
                'verbose_name_plural': 'Training Partner Targets',
            },
        ),
        migrations.RemoveField(
            model_name='mastertrainer',
            name='certificate_number',
        ),
        migrations.RemoveField(
            model_name='mastertrainer',
            name='certificates',
        ),
        migrations.RemoveField(
            model_name='mastertrainer',
            name='modules_assigned',
        ),
        migrations.RemoveField(
            model_name='mastertrainer',
            name='trainings_assigned',
        ),
        migrations.RemoveField(
            model_name='mastertrainer',
            name='trainings_running',
        ),
        migrations.RemoveField(
            model_name='mastertrainerexpertise',
            name='notes',
        ),
        migrations.RemoveField(
            model_name='mastertrainerexpertise',
            name='proficiency',
        ),
        migrations.RemoveField(
            model_name='mastertrainerexpertise',
            name='recommended',
        ),
        migrations.RemoveField(
            model_name='trainingpartner',
            name='cost_estimate',
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='ekyc_registered_on',
            field=models.DateTimeField(blank=True, help_text="Timestamp of eKYC/registration (useful to determine 'registered on start').", null=True, verbose_name='eKYC registered on'),
        ),
        migrations.AddField(
            model_name='beneficiary',
            name='registered_on_start',
            field=models.BooleanField(default=False, help_text='Set True when beneficiary completes eKYC/registration on the first day of a batch.', verbose_name='Registered on start (eKYC)'),
        ),
        migrations.AddField(
            model_name='mastertrainer',
            name='any_other_tots',
            field=models.TextField(blank=True, null=True, verbose_name='Any other ToTs'),
        ),
        migrations.AddField(
            model_name='mastertrainer',
            name='other_achievements',
            field=models.TextField(blank=True, null=True, verbose_name='Other Achievements'),
        ),
        migrations.AddField(
            model_name='mastertrainer',
            name='recommended_tots_by_dmmu',
            field=models.TextField(blank=True, null=True, verbose_name='Recommended ToTs by DMMU'),
        ),
        migrations.AddField(
            model_name='mastertrainer',
            name='success_rate',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='Success Rate (percent)'),
        ),
        migrations.AddField(
            model_name='mastertrainer',
            name='success_story_publications',
            field=models.TextField(blank=True, null=True, verbose_name='Success Story Publications'),
        ),
        migrations.AddField(
            model_name='mastertrainer',
            name='thematic_expert_recommendation',
            field=models.TextField(blank=True, null=True, verbose_name='Thematic Expert (SMMU) Approval/Recommendation'),
        ),
        migrations.AddField(
            model_name='trainingpartner',
            name='drp_payments',
            field=models.DecimalField(blank=True, decimal_places=2, help_text="Maps Excel 'DRP Payments' / previously 'cost_estimate' column.", max_digits=12, null=True, verbose_name='DRP Payments / Estimated Cost'),
        ),
        migrations.AddField(
            model_name='trainingpartner',
            name='photographs_submission',
            field=models.JSONField(blank=True, default=list, help_text='Summary/status of photo/PDF submissions. Actual files are in TrainingPartnerSubmission.', null=True, verbose_name='Photographs submission (summary/status)'),
        ),
        migrations.AddField(
            model_name='trainingpartner',
            name='signed_report_file',
            field=models.FileField(blank=True, help_text='Upload signed report file (PDF or image).', null=True, upload_to='partner_signed_reports/', verbose_name='Signed Report (PDF/JPG)'),
        ),
        migrations.AddField(
            model_name='trainingpartner',
            name='signed_report_upload_status',
            field=models.CharField(blank=True, help_text="Maps Excel 'Signed Report Upload' (status or notes).", max_length=255, null=True, verbose_name='Signed Report Upload (status/notes)'),
        ),
        migrations.AddField(
            model_name='trainingpartner',
            name='signed_report_uploaded_by',
            field=models.CharField(blank=True, help_text="Maps Excel (Signed Report upload) 'By' column (uploader name or dept).", max_length=255, null=True, verbose_name='Signed Report Uploaded By'),
        ),
        migrations.AddField(
            model_name='trainingpartner',
            name='targets_allocated',
            field=models.CharField(blank=True, help_text='Short summary or legacy import field. Detailed targets are in TrainingPartnerTargets.', max_length=255, null=True, verbose_name='Targets Allocated (summary)'),
        ),
        migrations.AlterField(
            model_name='user',
            name='role',
            field=models.CharField(choices=[('bmmu', 'BMMU'), ('dmmu', 'DMMU'), ('smmu', 'SMMU'), ('training_partner', 'Training Partner'), ('master_trainer', 'Master Trainer'), ('admin', 'Admin')], default='bmmu', max_length=20),
        ),
        migrations.AddIndex(
            model_name='batch',
            index=models.Index(fields=['partner', 'status'], name='bmmu_batch_partner_36d631_idx'),
        ),
        migrations.AddIndex(
            model_name='batch',
            index=models.Index(fields=['training_plan'], name='bmmu_batch_trainin_6c78c9_idx'),
        ),
        migrations.AddIndex(
            model_name='beneficiary',
            index=models.Index(fields=['mobile_no'], name='bmmu_benefi_mobile__0ea95e_idx'),
        ),
        migrations.AddIndex(
            model_name='beneficiary',
            index=models.Index(fields=['aadhaar_no'], name='bmmu_benefi_aadhaar_355231_idx'),
        ),
        migrations.AddIndex(
            model_name='mastertrainer',
            index=models.Index(fields=['full_name'], name='bmmu_master_full_na_ef990c_idx'),
        ),
        migrations.AddIndex(
            model_name='mastertrainerexpertise',
            index=models.Index(fields=['trainer', 'training_plan'], name='bmmu_master_trainer_c298c6_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingpartner',
            index=models.Index(fields=['name'], name='bmmu_traini_name_3e4d50_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingpartner',
            index=models.Index(fields=['center_location'], name='bmmu_traini_center__901c3c_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingplan',
            index=models.Index(fields=['training_name'], name='bmmu_traini_trainin_ebf08e_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingplan',
            index=models.Index(fields=['theme'], name='bmmu_traini_theme_096e5f_idx'),
        ),
        migrations.AddField(
            model_name='mastertrainercertificate',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certificates', to='bmmu.mastertrainer'),
        ),
        migrations.AddField(
            model_name='mastertrainercertificate',
            name='training_module',
            field=models.ForeignKey(blank=True, help_text='Link to the TrainingPlan record for which this certificate was issued (nullable).', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='certificates', to='bmmu.trainingplan'),
        ),
        migrations.AddField(
            model_name='trainingpartnersubmission',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='bmmu.trainingpartner'),
        ),
        migrations.AddField(
            model_name='trainingpartnersubmission',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trainingpartnertargets',
            name='allocated_by',
            field=models.ForeignKey(blank=True, help_text='SMMU/thematic expert or admin user who allocated the target.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='allocated_targets', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trainingpartnertargets',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='bmmu.trainingpartner'),
        ),
        migrations.AddIndex(
            model_name='trainingpartnersubmission',
            index=models.Index(fields=['partner', 'category'], name='bmmu_traini_partner_ca9ea9_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingpartnertargets',
            index=models.Index(fields=['partner', 'target_type'], name='bmmu_traini_partner_9d3694_idx'),
        ),
    ]
