# Generated by Django 5.2.6 on 2025-10-07 07:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('bmmu', '0011_shg'),
    ]

    operations = [
        migrations.CreateModel(
            name='TrainerBatchRegistration',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('registered_on', models.DateTimeField(auto_now_add=True)),
                ('attended', models.BooleanField(default=False)),
                ('remarks', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Trainer Batch Registration',
                'verbose_name_plural': 'Trainer Batch Registrations',
            },
        ),
        migrations.CreateModel(
            name='TrainingPartnerCentre',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('serial_number', models.IntegerField(blank=True, null=True)),
                ('centre_coord_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Coordinator Name')),
                ('centre_coord_mob_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Coordinator Mobile')),
                ('venue_name', models.CharField(blank=True, max_length=120, null=True, verbose_name='Venue Name')),
                ('venue_address', models.CharField(blank=True, max_length=500, null=True, verbose_name='Venue Address')),
                ('training_hall_count', models.IntegerField(blank=True, null=True, verbose_name='Number of Training Halls')),
                ('training_hall_capacity', models.IntegerField(blank=True, null=True, verbose_name='Training Hall Capacity (max 35 participants/batch)')),
                ('security_arrangements', models.CharField(blank=True, max_length=255, null=True, verbose_name='Security Arrangements')),
                ('toilets_bathrooms', models.IntegerField(blank=True, null=True, verbose_name='Total Toilets/Bathrooms')),
                ('power_water_facility', models.CharField(blank=True, max_length=255, null=True, verbose_name='Power/Water Availability')),
                ('medical_kit', models.BooleanField(default=False, verbose_name='Medical Kit Available')),
                ('centre_type', models.CharField(blank=True, max_length=255, null=True, verbose_name='Centre Type (Private/Govt/Lodge/Rented)')),
                ('open_space', models.BooleanField(default=False, verbose_name='Open Space for Group Activity')),
                ('field_visit_facility', models.BooleanField(default=False, verbose_name='Field Visit Facility')),
                ('transport_facility', models.BooleanField(default=False, verbose_name='Transport Facility')),
                ('dining_facility', models.BooleanField(default=False, verbose_name='Dining Room Facility')),
                ('other_details', models.TextField(blank=True, null=True, verbose_name='Other Details')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Training Partner Centre',
                'verbose_name_plural': 'Training Partner Centres',
            },
        ),
        migrations.CreateModel(
            name='TrainingPartnerCentreRooms',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('room_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Room Name/Number')),
                ('room_capacity', models.IntegerField(blank=True, null=True, verbose_name='Room Capacity (max 20 per room)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Training Partner Centre Room',
                'verbose_name_plural': 'Training Partner Centre Rooms',
            },
        ),
        migrations.CreateModel(
            name='TrainingRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('training_type', models.CharField(choices=[('BENEFICIARY', 'Beneficiary'), ('TRAINER', 'Master Trainer')], max_length=20, verbose_name='Applicable For')),
                ('level', models.CharField(blank=True, choices=[('BLOCK', 'Block'), ('DISTRICT', 'District'), ('STATE', 'State')], default='BLOCK', max_length=50, null=True)),
                ('status', models.CharField(choices=[('PENDING', 'Pending Approval'), ('ONGOING', 'Ongoing'), ('COMPLETED', 'Completed'), ('REJECTED', 'Rejected')], default='PENDING', max_length=20)),
                ('rejection_reason', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Training',
                'verbose_name_plural': 'Trainings',
            },
        ),
        migrations.RemoveIndex(
            model_name='batch',
            name='bmmu_batch_partner_36d631_idx',
        ),
        migrations.RemoveIndex(
            model_name='batch',
            name='bmmu_batch_trainin_6c78c9_idx',
        ),
        migrations.RemoveIndex(
            model_name='trainingpartnersubmission',
            name='bmmu_traini_partner_ca9ea9_idx',
        ),
        migrations.RemoveField(
            model_name='batch',
            name='beneficiaries',
        ),
        migrations.RemoveField(
            model_name='batch',
            name='centre_proposed',
        ),
        migrations.RemoveField(
            model_name='batch',
            name='created_by',
        ),
        migrations.RemoveField(
            model_name='batch',
            name='partner',
        ),
        migrations.RemoveField(
            model_name='batch',
            name='status',
        ),
        migrations.RemoveField(
            model_name='batch',
            name='submissions',
        ),
        migrations.RemoveField(
            model_name='batch',
            name='training_plan',
        ),
        migrations.RemoveField(
            model_name='trainingpartner',
            name='center_location',
        ),
        migrations.RemoveField(
            model_name='trainingpartner',
            name='certifications',
        ),
        migrations.RemoveField(
            model_name='trainingpartner',
            name='photographs_submission',
        ),
        migrations.RemoveField(
            model_name='trainingpartner',
            name='targets_allocated',
        ),
        migrations.RemoveField(
            model_name='trainingpartnersubmission',
            name='partner',
        ),
        migrations.AlterField(
            model_name='batch',
            name='code',
            field=models.CharField(blank=True, max_length=255, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='beneficiary',
            name='block',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beneficiary_block', to='bmmu.block'),
        ),
        migrations.AlterField(
            model_name='beneficiary',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='beneficiary_district', to='bmmu.district'),
        ),
        migrations.AlterField(
            model_name='beneficiarybatchregistration',
            name='beneficiary',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='benefs_registrations', to='bmmu.beneficiary'),
        ),
        migrations.AlterField(
            model_name='trainerbatchparticipation',
            name='status',
            field=models.CharField(blank=True, choices=[('AVAILABLE', 'Available'), ('UNAVAILABLE', 'Unavailable')], default='AVAILABLE', max_length=20, null=True),
        ),
        migrations.AlterField(
            model_name='trainingpartnersubmission',
            name='category',
            field=models.CharField(choices=[('FOODING', 'Fooding'), ('TOILET', 'Toilet'), ('CENTRE_FRONT', 'Centre (front)'), ('HOSTEL', 'Hostel'), ('CCTV_SECURITY', 'CCTV SECURITY'), ('ACTIVITY_HALL', 'Activity Hall'), ('OTHER', 'Other')], default='OTHER', max_length=32),
        ),
        migrations.AddField(
            model_name='trainerbatchregistration',
            name='trainer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_registrations', to='bmmu.mastertrainer'),
        ),
        migrations.AddField(
            model_name='trainingpartnercentre',
            name='district',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trainingpartner_centre_district', to='bmmu.district'),
        ),
        migrations.AddField(
            model_name='trainingpartnercentre',
            name='partner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='centres', to='bmmu.trainingpartner'),
        ),
        migrations.AddField(
            model_name='trainingpartnercentre',
            name='uploaded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='batch',
            name='centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='centre_of_batch', to='bmmu.trainingpartnercentre'),
        ),
        migrations.AddField(
            model_name='trainingpartnersubmission',
            name='centre',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='submissions', to='bmmu.trainingpartnercentre'),
        ),
        migrations.AddIndex(
            model_name='trainingpartnersubmission',
            index=models.Index(fields=['centre', 'category'], name='bmmu_traini_centre__f307d4_idx'),
        ),
        migrations.AddField(
            model_name='trainingpartnercentrerooms',
            name='centre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rooms', to='bmmu.trainingpartnercentre'),
        ),
        migrations.AddField(
            model_name='trainingrequest',
            name='beneficiaries',
            field=models.ManyToManyField(blank=True, related_name='benefs_for_training', through='bmmu.BeneficiaryBatchRegistration', to='bmmu.beneficiary'),
        ),
        migrations.AddField(
            model_name='trainingrequest',
            name='created_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_training_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='trainingrequest',
            name='partner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='training_requests', to='bmmu.trainingpartner'),
        ),
        migrations.AddField(
            model_name='trainingrequest',
            name='trainers',
            field=models.ManyToManyField(blank=True, related_name='trainers_for_training', through='bmmu.TrainerBatchRegistration', to='bmmu.mastertrainer'),
        ),
        migrations.AddField(
            model_name='trainingrequest',
            name='training_plan',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='training_requests', to='bmmu.trainingplan'),
        ),
        migrations.AddField(
            model_name='trainerbatchregistration',
            name='training',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trainer_request_for_training', to='bmmu.trainingrequest'),
        ),
        migrations.AlterUniqueTogether(
            name='beneficiarybatchregistration',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='batch',
            name='request',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='request_of_batch', to='bmmu.trainingrequest'),
        ),
        migrations.AddField(
            model_name='beneficiarybatchregistration',
            name='training',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='beneficiary_registrations', to='bmmu.trainingrequest'),
        ),
        migrations.AlterUniqueTogether(
            name='beneficiarybatchregistration',
            unique_together={('beneficiary', 'training')},
        ),
        migrations.AddIndex(
            model_name='batch',
            index=models.Index(fields=['request', 'centre'], name='bmmu_batch_request_19dfa0_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingpartnercentre',
            index=models.Index(fields=['partner', 'district'], name='bmmu_traini_partner_0207f9_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingrequest',
            index=models.Index(fields=['partner', 'status'], name='bmmu_traini_partner_7027ce_idx'),
        ),
        migrations.AddIndex(
            model_name='trainingrequest',
            index=models.Index(fields=['training_plan'], name='bmmu_traini_trainin_abff6e_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='trainerbatchregistration',
            unique_together={('trainer', 'training')},
        ),
        migrations.RemoveField(
            model_name='beneficiarybatchregistration',
            name='batch',
        ),
    ]
